/*
 * Install the extension and define the tables.
 * All the foreign tables defined refer to the same Oracle table.
 */
SET client_min_messages = WARNING;
CREATE EXTENSION oracle_fdw;
-- TWO_TASK or ORACLE_HOME and ORACLE_SID must be set in the server's environment for this to work
CREATE SERVER oracle FOREIGN DATA WRAPPER oracle_fdw OPTIONS (dbserver '');
CREATE SERVER another_server FOREIGN DATA WRAPPER oracle_fdw OPTIONS (dbserver '');
CREATE USER MAPPING FOR PUBLIC SERVER oracle OPTIONS (user 'SCOTT', password 'tiger');
CREATE USER MAPPING FOR PUBLIC SERVER another_server OPTIONS (user 'SCOTT', password 'tiger');
CREATE USER another_user;
-- Oracle table TYPETEST1 must be created for this one
CREATE FOREIGN TABLE typetest1 (
   id  integer OPTIONS (key 'yes') NOT NULL,
   q   double precision,
   c   character(10),
   nc  character(10),
   vc  character varying(10),
   nvc character varying(10),
   lc  text,
   r   bytea,
   u   uuid,
   lb  bytea,
   lr  bytea,
   b   boolean,
   num numeric(7,5),
   fl  float,
   db  double precision,
   d   date,
   ts  timestamp with time zone,
   ids interval,
   iym interval
) SERVER oracle OPTIONS (table 'TYPETEST1');
ALTER FOREIGN TABLE typetest1 DROP q;
-- a table that is missing some fields
CREATE FOREIGN TABLE shorty (
   id  integer OPTIONS (key 'yes') NOT NULL,
   c   character(10)
) SERVER oracle OPTIONS (table 'TYPETEST1');
-- a table that has some extra fields
CREATE FOREIGN TABLE longy (
   id  integer OPTIONS (key 'yes') NOT NULL,
   c   character(10),
   nc  character(10),
   vc  character varying(10),
   nvc character varying(10),
   lc  text,
   r   bytea,
   u   uuid,
   lb  bytea,
   lr  bytea,
   b   boolean,
   num numeric(7,5),
   fl  float,
   db  double precision,
   d   date,
   ts  timestamp with time zone,
   ids interval,
   iym interval,
   x   integer
) SERVER oracle OPTIONS (table 'TYPETEST1');
-- a table for join tests
CREATE FOREIGN TABLE shorty2 (
   id  integer OPTIONS (key 'yes') NOT NULL,
   c   character(10)
) SERVER oracle OPTIONS (table 'TYPETEST2');
CREATE FOREIGN TABLE shorty3 (
   id  integer OPTIONS (key 'yes') NOT NULL,
   c   character(10)
) SERVER another_server OPTIONS (table 'TYPETEST2');
GRANT SELECT ON shorty2 TO another_user;
CREATE VIEW v_shorty2 AS SELECT * FROM shorty2;
ALTER VIEW v_shorty2 OWNER TO another_user;
GRANT ALL ON v_shorty2 TO PUBLIC;
/*
 * Empty the table and INSERT some samples.
 */
DELETE FROM typetest1;
INSERT INTO typetest1 (id, c, nc, vc, nvc, lc, r, u, lb, lr, b, num, fl, db, d, ts, ids, iym) VALUES (
   1,
   'fixed char',
   'nat''l char',
   'varlena',
   'nat''l var',
   'character large object',
   bytea('\xDEADBEEF'),
   uuid('055e26fa-f1d8-771f-e053-1645990add93'),
   bytea('\xDEADBEEF'),
   bytea('\xDEADBEEF'),
   TRUE,
   3.14159,
   3.14159,
   3.14159,
   '1968-10-20',
   '2009-01-26 22:30:00 PST',
   '1 day 2 hours 30 seconds 1 microsecond',
   '-6 months'
);
INSERT INTO shorty (id, c) VALUES (2, NULL);
INSERT INTO typetest1 (id, c, nc, vc, nvc, lc, r, u, lb, lr, b, num, fl, db, d, ts, ids, iym) VALUES (
   3,
   E'a\u001B\u0007\u000D\u007Fb',
   E'a\u001B\u0007\u000D\u007Fb',
   E'a\u001B\u0007\u000D\u007Fb',
   E'a\u001B\u0007\u000D\u007Fb',
   E'a\u001B\u0007\u000D\u007Fb ABC' || repeat('X', 9000),
   bytea('\xDEADF00D'),
   uuid('055f3b32-a02c-4532-e053-1645990a6db2'),
   bytea('\xDEADF00DDEADF00DDEADF00D'),
   bytea('\xDEADF00DDEADF00DDEADF00D'),
   FALSE,
   -2.71828,
   -2.71828,
   -2.71828,
   '2014-11-25',
   '2014-11-25 15:02:54.893532 PST',
   '-2 days -12 hours -30 minutes',
   '-2 years -6 months'
);
INSERT INTO typetest1 (id, c, nc, vc, nvc, lc, r, u, lb, lr, b, num, fl, db, d, ts, ids, iym) VALUES (
   4,
   'short',
   'short',
   'short',
   'short',
   'short',
   bytea('\xDEADF00D'),
   uuid('0560ee34-2ef9-1137-e053-1645990ac874'),
   bytea('\xDEADF00D'),
   bytea('\xDEADF00D'),
   NULL,
   0,
   0,
   0,
   NULL,
   NULL,
   '23:59:59.999999',
   '3 years'
);
-- generate data for join tests
BEGIN;
DELETE FROM shorty2;
INSERT INTO shorty2 (id, c) VALUES (1, '2-1');
INSERT INTO shorty2 (id, c) VALUES (2, '2-2');
INSERT INTO shorty2 (id, c) VALUES (4, '2-4');
INSERT INTO shorty2 (id, c) VALUES (5, '2-5');
COMMIT;
/*
 * Test SELECT, UPDATE ... RETURNING, DELETE and transactions.
 */
-- simple SELECT
SELECT id, c, nc, vc, nvc, length(lc), r, u, length(lb), length(lr), b, num, fl, db, d, ts, ids, iym, x FROM longy ORDER BY id;
WARNING:  column number 19 of foreign table "longy" does not exist in foreign Oracle table, will be replaced by NULL
 id |          c           |          nc          |        vc        |       nvc        | length |     r      |                  u                   | length | length | b |   num    |     fl      |    db    |     d      |                 ts                  |                ids                |         iym          | x 
----+----------------------+----------------------+------------------+------------------+--------+------------+--------------------------------------+--------+--------+---+----------+-------------+----------+------------+-------------------------------------+-----------------------------------+----------------------+---
  1 | fixed char           | nat'l char           | varlena          | nat'l var        |     22 | \xdeadbeef | 055e26fa-f1d8-771f-e053-1645990add93 |      4 |      4 | t |  3.14159 |  3.14159012 |  3.14159 | 10-20-1968 | Mon Jan 26 22:30:00 2009 PST        | @ 1 day 2 hours 30.000001 secs    | @ 6 mons ago         |  
  2 |                      |                      |                  |                  |        |            |                                      |        |        |   |          |             |          |            |                                     |                                   |                      |  
  3 | a\x1B\x07\r\x7Fb     | a\x1B\x07\r\x7Fb     | a\x1B\x07\r\x7Fb | a\x1B\x07\r\x7Fb |   9010 | \xdeadf00d | 055f3b32-a02c-4532-e053-1645990a6db2 |     12 |     12 | f | -2.71828 | -2.71828008 | -2.71828 | 11-25-2014 | Tue Nov 25 15:02:54.893532 2014 PST | @ 2 days 12 hours 30 mins ago     | @ 2 years 6 mons ago |  
  4 | short                | short                | short            | short            |      5 | \xdeadf00d | 0560ee34-2ef9-1137-e053-1645990ac874 |      4 |      4 |   |  0.00000 |           0 |        0 |            |                                     | @ 23 hours 59 mins 59.999999 secs | @ 3 years            |  
(4 rows)

-- mass UPDATE
WITH upd (id, c, lb) AS
   (UPDATE longy SET c = substr(c, 1, 9) || 'u',
                    lb = lb || bytea('\x00'),
                    lr = lr || bytea('\x00')
   WHERE id < 3 RETURNING id + 1, c, lb)
SELECT * FROM upd ORDER BY id;
WARNING:  column number 19 of foreign table "longy" does not exist in foreign Oracle table, will be replaced by NULL
 id |     c      |      lb      
----+------------+--------------
  2 | fixed chau | \xdeadbeef00
  3 |            | 
(2 rows)

-- transactions
BEGIN;
DELETE FROM shorty WHERE id = 2;
SAVEPOINT one;
-- will cause an error
INSERT INTO shorty (id, c) VALUES (1, 'c');
ERROR:  error executing query: OCIStmtExecute failed to execute remote query
DETAIL:  ORA-00001: unique constraint (SCOTT.TYPETEST1_PKEY) violated
ROLLBACK TO one;
INSERT INTO shorty (id, c) VALUES (2, 'c');
ROLLBACK TO one;
COMMIT;
-- see if the correct data are in the table
SELECT id, c FROM typetest1 ORDER BY id;
 id |          c           
----+----------------------
  1 | fixed chau
  3 | a\x1B\x07\r\x7Fb    
  4 | short     
(3 rows)

/*
 * Test EXPLAIN support.
 */
EXPLAIN (COSTS off) UPDATE typetest1 SET lc = current_timestamp WHERE id < 4 RETURNING id + 1;
                                                                                                                                           QUERY PLAN                                                                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Update on typetest1
   Oracle statement: UPDATE "TYPETEST1" SET "LC" = :p7 WHERE "ID" = :k1 RETURNING "ID" INTO :r1
   ->  Foreign Scan on typetest1
         Oracle query: SELECT /*05a43ffbbec22848a8eea273c19f598f*/ "ID" a_1, "C" a_2, "NC" a_3, "VC" a_4, "NVC" a_5, "R" a_6, "U" a_7, "LB" a_8, "LR" a_9, "B" a_10, "NUM" a_11, "FL" a_12, "DB" a_13, "D" a_14, "TS" a_15, "IDS" a_16, "IYM" a_17 FROM "TYPETEST1" WHERE ("ID" < 4) FOR UPDATE
(4 rows)

EXPLAIN (VERBOSE on, COSTS off) SELECT * FROM shorty;
                                                                                                                               QUERY PLAN                                                                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.shorty
   Output: id, c
   Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
   Oracle plan: SELECT STATEMENT
   Oracle plan:   TABLE ACCESS FULL TYPETEST1
(5 rows)

/*
 * join SELECT
 */
-- query with ORDER BY causes MergeJoin even cost is not cheapest, so supress it.
SET enable_mergejoin = off;
-- simple join
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;


 Sort
   Sort Key: id
   ->  Foreign Scan
         Oracle query: SELECT r.a_1 a_1, r.a_2 a_2, l.a_1 a_3, l.a_2 a_4 FROM (SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2") l INNER JOIN (SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1") r ON (r.a_1 = l.a_1)
(4 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;
 id |     c      | id |     c      
----+------------+----+------------
  1 | fixed chau |  1 | 2-1       
  4 | short      |  4 | 2-4       
(2 rows)

-- simple join in CTE
EXPLAIN (COSTS false)
WITH s AS (SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.id = s2.id) SELECT * FROM s ORDER BY 1, 3;


 Sort
   Sort Key: s.id, s.id_1
   CTE s
     ->  Foreign Scan
           Oracle query: SELECT r.a_1 a_1, r.a_2 a_2, l.a_1 a_3, l.a_2 a_4 FROM (SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2") l INNER JOIN (SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1") r ON (r.a_1 = l.a_1)
   ->  CTE Scan on s
(6 rows)

WITH s AS (SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.id = s2.id) SELECT * FROM s ORDER BY 1, 3;
 id |     c      | id |     c      
----+------------+----+------------
  1 | fixed chau |  1 | 2-1       
  4 | short      |  4 | 2-4       
(2 rows)

-- left outer join
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 LEFT JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;


 Sort
   Sort Key: id, id
   ->  Foreign Scan
         Oracle query: SELECT l.a_1 a_1, l.a_2 a_2, r.a_1 a_3, r.a_2 a_4 FROM (SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1") l LEFT JOIN (SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2") r ON (l.a_1 = r.a_1)
(4 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 LEFT JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;
 id |          c           | id |     c      
----+----------------------+----+------------
  1 | fixed chau           |  1 | 2-1       
  3 | a\x1B\x07\r\x7Fb     |    | 
  4 | short                |  4 | 2-4       
(3 rows)

-- right outer join
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 RIGHT JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;


 Sort
   Sort Key: id, id
   ->  Foreign Scan
         Oracle query: SELECT l.a_1 a_1, l.a_2 a_2, r.a_1 a_3, r.a_2 a_4 FROM (SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2") l LEFT JOIN (SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1") r ON (r.a_1 = l.a_1)
(4 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 RIGHT JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;
 id |     c      | id |     c      
----+------------+----+------------
  1 | fixed chau |  1 | 2-1       
  4 | short      |  4 | 2-4       
    |            |  2 | 2-2       
    |            |  5 | 2-5       
(4 rows)

-- full outer join
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 FULL JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;


 Sort
   Sort Key: id, id
   ->  Foreign Scan
         Oracle query: SELECT l.a_1 a_1, l.a_2 a_2, r.a_1 a_3, r.a_2 a_4 FROM (SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1") l FULL JOIN (SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2") r ON (l.a_1 = r.a_1)
(4 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 FULL JOIN shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;
 id |          c           | id |     c      
----+----------------------+----+------------
  1 | fixed chau           |  1 | 2-1       
  3 | a\x1B\x07\r\x7Fb     |    | 
  4 | short                |  4 | 2-4       
    |                      |  2 | 2-2       
    |                      |  5 | 2-5       
(5 rows)

-- semi join (no push-down)
EXPLAIN (COSTS false)
SELECT s1.id, s1.c FROM shorty s1 WHERE EXISTS (SELECT 1 FROM shorty2 s2 WHERE s1.id = s2.id) ORDER BY 1;
                                                                                                                                            QUERY PLAN                                                                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: s1.id
   ->  Hash Join
         Hash Cond: (s1.id = s2.id)
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
         ->  Hash
               ->  HashAggregate
                     Group Key: s2.id
                     ->  Foreign Scan on shorty2 s2
                           Oracle query: SELECT /*cc9d5ecd653c449bab192ad5e961c427*/ "ID" a_1, NULL a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2"
(11 rows)

SELECT s1.id, s1.c FROM shorty s1 WHERE EXISTS (SELECT 1 FROM shorty2 s2 WHERE s1.id = s2.id) ORDER BY 1;
 id |     c      
----+------------
  1 | fixed chau
  4 | short     
(2 rows)

-- anti join (no push-down)
EXPLAIN (COSTS false)
SELECT s1.id, s1.c FROM shorty s1 WHERE NOT EXISTS (SELECT 1 FROM shorty2 s2 WHERE s1.id = s2.id) ORDER BY 1;
                                                                                                                                         QUERY PLAN                                                                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: s1.id
   ->  Hash Anti Join
         Hash Cond: (s1.id = s2.id)
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
         ->  Hash
               ->  Foreign Scan on shorty2 s2
                     Oracle query: SELECT /*cc9d5ecd653c449bab192ad5e961c427*/ "ID" a_1, NULL a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2"
(9 rows)

SELECT s1.id, s1.c FROM shorty s1 WHERE NOT EXISTS (SELECT 1 FROM shorty2 s2 WHERE s1.id = s2.id) ORDER BY 1;
 id |          c           
----+----------------------
  3 | a\x1B\x07\r\x7Fb    
(1 row)

-- cross join (no push-down)
EXPLAIN (COSTS false)
SELECT * FROM shorty s1 CROSS JOIN shorty2 s2 ORDER BY 1, 3;
                                                                                                                                        QUERY PLAN                                                                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: s1.id, s2.id
   ->  Nested Loop
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
         ->  Materialize
               ->  Foreign Scan on shorty2 s2
                     Oracle query: SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2"
(8 rows)

SELECT * FROM shorty s1 CROSS JOIN shorty2 s2 ORDER BY 1, 3;
 id |          c           | id |     c      
----+----------------------+----+------------
  1 | fixed chau           |  1 | 2-1       
  1 | fixed chau           |  2 | 2-2       
  1 | fixed chau           |  4 | 2-4       
  1 | fixed chau           |  5 | 2-5       
  3 | a\x1B\x07\r\x7Fb     |  1 | 2-1       
  3 | a\x1B\x07\r\x7Fb     |  2 | 2-2       
  3 | a\x1B\x07\r\x7Fb     |  4 | 2-4       
  3 | a\x1B\x07\r\x7Fb     |  5 | 2-5       
  4 | short                |  1 | 2-1       
  4 | short                |  2 | 2-2       
  4 | short                |  4 | 2-4       
  4 | short                |  5 | 2-5       
(12 rows)

-- UPDATE (no push-down)
EXPLAIN (COSTS false)
UPDATE shorty s1 SET c = s2.c FROM shorty2 s2 WHERE s1.id = s2.id;
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Update on shorty s1
   Oracle statement: UPDATE "TYPETEST1" SET "C" = :p2 WHERE "ID" = :k1
   ->  Hash Join
         Hash Cond: (s1.id = s2.id)
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*44fe363235f8c0407e514ed993c335fa*/ "ID" a_1 FROM "TYPETEST1" FOR UPDATE
         ->  Hash
               ->  Foreign Scan on shorty2 s2
                     Oracle query: SELECT /*0b38bb5bb109d5ab48a79f74bf868d2d*/ "ID" a_1, "C" a_2 FROM "TYPETEST2"
(9 rows)

UPDATE shorty s1 SET c = s2.c FROM shorty2 s2 WHERE s1.id = s2.id;
-- DELETE (no push-down)
EXPLAIN (COSTS false)
DELETE FROM shorty s1 USING shorty2 s2 WHERE s1.id = s2.id;
                                                  QUERY PLAN                                                  
--------------------------------------------------------------------------------------------------------------
 Delete on shorty s1
   Oracle statement: DELETE FROM "TYPETEST1" WHERE "ID" = :k1
   ->  Hash Join
         Hash Cond: (s1.id = s2.id)
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*44fe363235f8c0407e514ed993c335fa*/ "ID" a_1 FROM "TYPETEST1" FOR UPDATE
         ->  Hash
               ->  Foreign Scan on shorty2 s2
                     Oracle query: SELECT /*2c7fd258f5eaaab3ec797b8243e08908*/ "ID" a_1 FROM "TYPETEST2"
(9 rows)

DELETE FROM shorty s1 USING shorty2 s2 WHERE s1.id = s2.id;
-- different server (no push-down)
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty3 s2 ON s1.id = s2.id ORDER BY 1, 3;
                                                                                                                                        QUERY PLAN                                                                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: s1.id
   ->  Hash Join
         Hash Cond: (s1.id = s2.id)
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
         ->  Hash
               ->  Foreign Scan on shorty3 s2
                     Oracle query: SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2"
(9 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty3 s2 ON s1.id = s2.id ORDER BY 1, 3;
 id | c | id | c 
----+---+----+---
(0 rows)

-- different checkAsUser
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN v_shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;
                                                                                                                                        QUERY PLAN                                                                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: s1.id
   ->  Hash Join
         Hash Cond: (s1.id = shorty2.id)
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
         ->  Hash
               ->  Foreign Scan on shorty2
                     Oracle query: SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2"
(9 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN v_shorty2 s2 ON s1.id = s2.id ORDER BY 1, 3;
 id | c | id | c 
----+---+----+---
(0 rows)

-- unsafe join conditions (no push-down)
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.c = s2.c || now()::text ORDER BY 1, 3;
                                                                                                                                        QUERY PLAN                                                                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: s1.id, s2.id
   ->  Hash Join
         Hash Cond: ((s1.c)::text = ((s2.c)::text || (now())::text))
         ->  Foreign Scan on shorty s1
               Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
         ->  Hash
               ->  Foreign Scan on shorty2 s2
                     Oracle query: SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2"
(9 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.c = s2.c || now()::text ORDER BY 1, 3;
 id | c | id | c 
----+---+----+---
(0 rows)

-- with local filter (no push-down)
EXPLAIN (COSTS false)
SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.c = s2.c WHERE s1.c = now()::text ORDER BY 1, 3;
                                                                                                                                        QUERY PLAN                                                                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: s1.id, s2.id
   ->  Hash Join
         Hash Cond: (s1.c = s2.c)
         ->  Foreign Scan on shorty s1
               Filter: ((c)::text = (now())::text)
               Oracle query: SELECT /*1e2d011c693848d03523d465a10e5056*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST1"
         ->  Hash
               ->  Foreign Scan on shorty2 s2
                     Oracle query: SELECT /*2580f1915eab18d0e76c487f6830f1a5*/ "ID" a_1, "C" a_2, NULL a_3, NULL a_4, NULL a_5, NULL a_6, NULL a_7, NULL a_8, NULL a_9, NULL a_10, NULL a_11, NULL a_12, NULL a_13, NULL a_14, NULL a_15, NULL a_16, NULL a_17, NULL a_18 FROM "TYPETEST2"
(10 rows)

SELECT s1.id, s1.c, s2.id, s2.c FROM shorty s1 JOIN shorty2 s2 ON s1.c = s2.c WHERE s1.c = now()::text ORDER BY 1, 3;
 id | c | id | c 
----+---+----+---
(0 rows)

/*
 * Test parameters.
 */
PREPARE stmt(integer) AS SELECT d FROM typetest1 WHERE id = $1;
-- six executions to switch to generic plan
EXECUTE stmt(1);
     d      
------------
 10-20-1968
(1 row)

EXECUTE stmt(1);
     d      
------------
 10-20-1968
(1 row)

EXECUTE stmt(1);
     d      
------------
 10-20-1968
(1 row)

EXECUTE stmt(1);
     d      
------------
 10-20-1968
(1 row)

EXECUTE stmt(1);
     d      
------------
 10-20-1968
(1 row)

EXPLAIN EXECUTE stmt(1);
                                                QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Foreign Scan on typetest1  (cost=10000.00..10000.00 rows=1000 width=4)
   Oracle query: SELECT /*9c6176932fee128d5bb3e292c1743289*/ "ID", "D" FROM "TYPETEST1" WHERE ("ID" = :p1)
(2 rows)

EXECUTE stmt(1);
     d      
------------
 10-20-1968
(1 row)

DEALLOCATE stmt;
/*
 * Cleanup
 */
DROP OWNED BY another_user;
DROP USER another_user;
